version: '3.9'

services:
  # ────────────────────────────────────────────────────────────
  #  App (Next.js)
  # ────────────────────────────────────────────────────────────
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: nextjs-app
    restart: unless-stopped
    environment:
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_NAME=${DB_NAME}
      - DB_HOST=${DB_HOST}
      - DB_PORT=${DB_PORT}
      - MAPS_API_KEY=${MAPS_API_KEY}
      - MAPS_PLACE_ID=${MAPS_PLACE_ID}
    env_file:
      - .env
    ports:
      - "3000:3000"
    depends_on:
      - db
    networks:
      - app-network

  # ────────────────────────────────────────────────────────────
  #  PostgreSQL
  # ────────────────────────────────────────────────────────────
  db:
    image: postgres:14
    container_name: postgres-db
    restart: unless-stopped
    environment:
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_DB=${DB_NAME}
    env_file:
      - .env
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ./db-init:/docker-entrypoint-initdb.d
    networks:
      - app-network

  # ────────────────────────────────────────────────────────────
  #  PgAdmin
  # ────────────────────────────────────────────────────────────
  pgadmin:
    image: dpage/pgadmin4
    container_name: pgadmin
    restart: unless-stopped
    environment:
      - PGADMIN_DEFAULT_EMAIL=${PGADMIN_DEFAULT_EMAIL}
      - PGADMIN_DEFAULT_PASSWORD=${PGADMIN_DEFAULT_PASSWORD}
    env_file:
      - .env
    ports:
      - "5050:80"
    depends_on:
      - db
    networks:
      - app-network

  # ────────────────────────────────────────────────────────────
  #  Nginx (reverse‑proxy + TLS)
  # ────────────────────────────────────────────────────────────
  nginx:
    image: nginx:latest
    container_name: nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - /etc/letsencrypt:/etc/letsencrypt:ro
      - /var/www/certbot:/var/www/certbot
    depends_on:
      - app
    networks:
      - app-network
    command: >
      /bin/sh -c "while :; do sleep 6h & wait $${!}; nginx -s reload; done &
                  nginx -g 'daemon off;'"

# ────────────────────────────────────────────────────────────
#  Volumes & Networks
# ────────────────────────────────────────────────────────────
volumes:
  postgres-data:

networks:
  app-network:
    driver: bridge
