user  nginx;
worker_processes  auto;

error_log  /var/log/nginx/error.log  warn;
pid        /var/run/nginx.pid;

# ──────────────────────────────────────────────────────────────
events {
    worker_connections  1024;
}

# ──────────────────────────────────────────────────────────────
http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    sendfile            on;
    keepalive_timeout   65;

    # ────────────  Redireciona tudo em HTTP → HTTPS  ───────────
    server {
        listen 80;
        server_name  littleangelsportland.com  www.littleangelsportland.com
                     littleangelspdx.com       www.littleangelspdx.com;

        # Se você usa o plugin --webroot do Certbot, mantenha este bloco;
        # caso use --nginx, ele é opcional.
        location /.well-known/acme-challenge/ {
            root /var/www/certbot;
        }

        # Redireciona para HTTPS preservando host e URI
        location / {
            return 301 https://$host$request_uri;
        }
    }

    # ────────────  Servidor HTTPS  ─────────────────────────────
    server {
        listen 443 ssl;
        server_name  littleangelsportland.com  www.littleangelsportland.com
                     littleangelspdx.com       www.littleangelspdx.com;

        # Caminho do certificado VÁLIDO (littleangelspdx.com)
        ssl_certificate      /etc/letsencrypt/live/littleangelspdx.com/fullchain.pem;
        ssl_certificate_key  /etc/letsencrypt/live/littleangelspdx.com/privkey.pem;

        ssl_protocols  TLSv1.2 TLSv1.3;
        ssl_ciphers    HIGH:!aNULL:!MD5;

        # (Opcional) se usar webroot
        location /.well-known/acme-challenge/ {
            root /var/www/certbot;
        }

        # Proxy reverso para o container Next.js
        location / {
            proxy_pass         http://app:3000;
            proxy_set_header   Host               $host;
            proxy_set_header   X-Real-IP          $remote_addr;
            proxy_set_header   X-Forwarded-For    $proxy_add_x_forwarded_for;
            proxy_set_header   X-Forwarded-Proto  $scheme;
        }
    }
}
